{"ast":null,"code":"var _jsxFileName = \"/Users/skohei/Desktop/\\u958B\\u767A/Udemy/reactProject/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: \"Apple\",\n    value: 100,\n    checked: false\n  }, {\n    label: \"Banana\",\n    value: 200,\n    checked: false\n  }, {\n    label: \"Cherry\",\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const handleChange = e => {\n    const newFruits = fruits.map(fruit => {\n      const newfruit = {\n        ...fruit\n      };\n      if (newfruit.label === e.target.value) {\n        newfruit.checked = !newfruit.checked;\n      }\n      return newfruit;\n    });\n    setFruits(newFruits);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruit => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: fruit.label,\n            type: \"checkbox\",\n            value: fruit.label,\n            checked: fruit.checked,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: fruit.label,\n            children: [fruit.label, \":\", fruit.value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, fruit.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"BTVzwCrD1I/sK/EDu490ryHccrs=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","handleChange","e","newFruits","map","fruit","newfruit","target","children","id","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/skohei/Desktop/開発/Udemy/reactProject/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Example = () => {\r\n  const [fruits, setFruits] = useState([\r\n    { label: \"Apple\", value: 100, checked: false },\r\n    { label: \"Banana\", value: 200, checked: false },\r\n    { label: \"Cherry\", value: 300, checked: false },\r\n  ]);\r\n\r\n  const [sum, setSum] = useState(0);\r\n  const handleChange = (e) => {\r\n    const newFruits = fruits.map((fruit) => {\r\n      const newfruit = { ...fruit };\r\n      if (newfruit.label === e.target.value) {\r\n        newfruit.checked = !newfruit.checked;\r\n      }\r\n\r\n      return newfruit;\r\n    });\r\n    setFruits(newFruits);\r\n  };\r\n  return (\r\n    <div>\r\n      {fruits.map((fruit) => {\r\n        return (\r\n          <>\r\n            <div key={fruit.label}>\r\n              <input\r\n                id={fruit.label}\r\n                type=\"checkbox\"\r\n                value={fruit.label}\r\n                checked={fruit.checked}\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor={fruit.label}>\r\n                {fruit.label}:{fruit.value}\r\n              </label>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n      <div>合計：{sum}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CACnC;IAAES,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAAEC,KAAK,IAAK;MACtC,MAAMC,QAAQ,GAAG;QAAE,GAAGD;MAAM,CAAC;MAC7B,IAAIC,QAAQ,CAACV,KAAK,KAAKM,CAAC,CAACK,MAAM,CAACV,KAAK,EAAE;QACrCS,QAAQ,CAACR,OAAO,GAAG,CAACQ,QAAQ,CAACR,OAAO;MACtC;MAEA,OAAOQ,QAAQ;IACjB,CAAC,CAAC;IACFX,SAAS,CAACQ,SAAS,CAAC;EACtB,CAAC;EACD,oBACEd,OAAA;IAAAmB,QAAA,GACGd,MAAM,CAACU,GAAG,CAAEC,KAAK,IAAK;MACrB,oBACEhB,OAAA,CAAAE,SAAA;QAAAiB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YACEoB,EAAE,EAAEJ,KAAK,CAACT,KAAM;YAChBc,IAAI,EAAC,UAAU;YACfb,KAAK,EAAEQ,KAAK,CAACT,KAAM;YACnBE,OAAO,EAAEO,KAAK,CAACP,OAAQ;YACvBa,QAAQ,EAAEV;UAAa;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACF1B,OAAA;YAAO2B,OAAO,EAAEX,KAAK,CAACT,KAAM;YAAAY,QAAA,GACzBH,KAAK,CAACT,KAAK,EAAC,GAAC,EAACS,KAAK,CAACR,KAAK;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA,GAVAV,KAAK,CAACT,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWhB;MAAC,gBACN,CAAC;IAEP,CAAC,CAAC,eACF1B,OAAA;MAAAmB,QAAA,GAAK,oBAAG,EAACT,GAAG;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1CID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}